@model SitioWeb.Models.Noticia

@{
    ViewBag.Title = "Nueva Noticia";
}

<h2>Nueva Noticia</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function onUpload(e) {        
        document.getElementById("Imagen").value = '/Content/img/img_Noticias/' + e.files[0].name;
    }
    function onRemove(e) {
        document.getElementById("Imagen").value = '';
    }
</script>


@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)    
    <fieldset>
        <legend>Noticia</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Titulo, "TITULO")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Titulo)
            @Html.ValidationMessageFor(model => model.Titulo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Fecha, "FECHA")
        </div>
        <div class="editor-field">            
            @(Html.Telerik().DatePickerFor(model => model.Fecha)
                    .Name("fecha")
                    .Value((DateTime)ViewData["fecha"])
            )       
            @Html.ValidationMessageFor(model => model.Fecha)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Imagen, "IMAGEN")
        </div>
        <div class="editor-field">            
            @(Html.Telerik().Upload()
            .Name("attachments")
                .Multiple(false)
                .Async(async => async
                .Save("Save", "Upload")
                .Remove("Remove", "Upload")
                .AutoUpload(true)                
                )
             .ClientEvents(events => events                
                .OnUpload("onUpload")                
                .OnRemove("onRemove"))
            )
            @Html.EditorFor(model => model.Imagen)
            @Html.ValidationMessageFor(model => model.Imagen)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Texto, "TEXTO")
        </div>
        <div class="editor-field">
            @{ Html.Telerik().EditorFor(model => model.Texto)
                .Name("Texto")                
                .HtmlAttributes(new { style = "width:90%" })
                .Encode(false)                
                .FileBrowser(t => t.Browse("Browse", "ImageBrowser")
                                    .Thumbnail("Thumbnail", "ImageBrowser")
                                    .Upload("Upload", "ImageBrowser")
                                    .DeleteFile("DeleteFile", "ImageBrowser")
                                    .DeleteDirectory("DeleteDirectory", "ImageBrowser")
                                    .CreateDirectory("CreateDirectory", "ImageBrowser"))
                .Render();
            }            
            @Html.ValidationMessageFor(model => model.Texto)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoriaId, "CATEGORIA")
        </div>
        <div class="editor-field">            
            @Html.DropDownListFor(model => model.CategoriaId, (IEnumerable<SelectListItem>)ViewData["categorias"], "-- Seleccionar --")
            @Html.ValidationMessageFor(model => model.CategoriaId)
        </div>

        <p>
            <input type="submit" value="Guardar" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>